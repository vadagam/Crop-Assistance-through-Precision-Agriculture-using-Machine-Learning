import pandas as pd                                                       
from sklearn import preprocessing                                       
from sklearn.neighbors import KNeighborsClassifier                        
import numpy as np                                                        
import PySimpleGUI as sg

excel = pd.read_excel('Crop.xlsx')                            
print(excel)                                                              
print(excel.shape)                                        

le = preprocessing.LabelEncoder()                                         
crop = le.fit_transform(list(excel["label"]))                              

NITROGEN = list(excel["N"])                                         
PHOSPHORUS = list(excel["P"])                                     
POTASSIUM = list(excel["K"])                                       
TEMPERATURE = list(excel["temperature"])                                  
HUMIDITY = list(excel["humidity"])                                      
PH = list(excel["ph"])
RAINFALL = list(excel["rainfall"])                                        
              
features = np.array([NITROGEN, PHOSPHORUS, POTASSIUM, TEMPERATURE, HUMIDITY, PH, RAINFALL])     

features = features.transpose()                                                                                
print(features.shape)                                                                                          
print(crop.shape)

model = KNeighborsClassifier(n_neighbors=3)                                                                    
model.fit(features, crop)                                                                                      
layout = [[sg.Text('                CROP PREDICTION USING KNN ALGORITHM', font=("Helvetica", 17), text_color = 'orange')],                                                                                                       
         [sg.Text('Please enter the following details :-', font=("Helvetica", 20), text_color = 'yellow')],                                                                                          
         [sg.Text('Enter ratio of Nitrogen in the soil                                  :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica",19), size = (15) )],
         [sg.Text('Enter ratio of Phosphorous in the soil                           :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica", 19),size = (15))],
         [sg.Text('Enter ratio of Potassium in the soil                               :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica",19),size = (15))],
         [sg.Text('Enter average Temperature value around the field        :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica",19),size = (15)), sg.Text('*C', font=("Helvetica", 18), text_color = 'black')], 
         [sg.Text('Enter average Percentage of Humidity around the field :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica",19),size = (15)), sg.Text('%', font=("Helvetica", 18), text_color = 'black')], 
         [sg.Text('Enter Ph value of the soil                                             :', font=("Helvetica", 20), text_color = 'black'), sg.Input(font=("Helvetica",19),size = (15))], 
         [sg.Text('Enter average amount of Rainfall around the field         :', font=("Helvetica", 20) , text_color = 'black'), sg.Input(font=("Helvetica",19),size = (15)),sg.Text('mm', font=("Helvetica", 18), text_color = 'black')],
         [sg.Text(size=(50,1),font=("Helvetica",20) , text_color = 'yellow', key='-OUTPUT1-' )],
         [sg.Button('Submit', font=("Helvetica", 20)),sg.Button('Quit', font=("Helvetica", 20))] ]
window = sg.Window('CROP PREDICTION USING KNN ALGORITHM ', layout) 

while True: 
    event, values = window.read()
    if event == sg.WINDOW_CLOSED or event == 'Quit':                                                                                            
        break
    print(values[0])
    nitrogen_content =    values[0]                                                                                                        
    phosphorus_content =  values[1]                                                                                                        
    potassium_content =   values[2]                                                                                                        
    temperature_content = values[3]                                                                                                        
    humidity_content =    values[4]                                                                                                      
    ph_content =          values[5]                                                                                                       
    rainfall =            values[6]                                                                                                        
    predict1 = np.array([nitrogen_content,phosphorus_content, potassium_content, temperature_content, humidity_content, ph_content, rainfall],dtype=float) 
    print(predict1)                                                                                                                             
    predict1 = predict1.reshape(1,-1)                                                                              
    print(predict1)                                                                                                
    predict1 = model.predict(predict1)                                                                             
    print(predict1)                                                                                             
    crop_name = str()
    if predict1 == 0:                                                                                            
        crop_name = 'Apple'
    elif predict1 == 1:
        crop_name = 'Banana'
    elif predict1 == 2:
        crop_name = 'Blackgram'
    elif predict1 == 3:
        crop_name = 'Chickpea'
    elif predict1 == 4:
        crop_name = 'Coconut'
    elif predict1 == 5:
        crop_name = 'Coffee'
    elif predict1 == 6:
        crop_name = 'Cotton'
    elif predict1 == 7:
        crop_name = 'Grapes'
    elif predict1 == 8:
        crop_name = 'Jute'
    elif predict1 == 9:
        crop_name = 'Kidneybeans'
    elif predict1 == 10:
        crop_name = 'Lentil'
    elif predict1 == 11:
        crop_name = 'Maize'
    elif predict1 == 12:
        crop_name = 'Mango'
    elif predict1 == 13:
        crop_name = 'Mothbeans'
    elif predict1 == 14:
        crop_name = 'Mungbeans'
    elif predict1 == 15:
        crop_name = 'Muskmelon'
    elif predict1 == 16:
        crop_name = 'Orange'
    elif predict1 == 17:
        crop_name = 'Papaya'
    elif predict1 == 18:
        crop_name = 'Pigeonpeas'
    elif predict1 == 19:
        crop_name = 'Pomegranate'
    elif predict1 == 20:
        crop_name = 'Rice'
    elif predict1 == 21:
        crop_name = 'Watermelon'

    if int(humidity_content) >=1 and int(humidity_content)<= 33 :                                               
        humidity_level = 'low humid'
    elif int(humidity_content) >=34 and int(humidity_content) <= 66:
        humidity_level = 'medium humid'
    else:
        humidity_level = 'high humid'

    if int(temperature_content) >= 0 and int(temperature_content)<= 6:                                          
        temperature_level = 'cool'
    elif int(temperature_content) >=7 and int(temperature_content) <= 25:
        temperature_level = 'warm'
    else:
        temperature_level= 'hot' 

    if int(rainfall) >=1 and int(rainfall) <= 100:                                                              
        rainfall_level = 'less'
    elif int(rainfall) >= 101 and int(rainfall) <=200:
        rainfall_level = 'moderate'
    elif int(rainfall) >=201:
        rainfall_level = 'heavy rain'

    if int(nitrogen_content) >= 1 and int(nitrogen_content) <= 50:                                             
        nitrogen_level = 'less'
    elif int(nitrogen_content) >=51 and int(nitrogen_content) <=100:
        nitrogen_level = 'not to less but also not to high'
    elif int(nitrogen_content) >=101:
        nitrogen_level = 'high'

    if int(phosphorus_content) >= 1 and int(phosphorus_content) <= 50:                                         
        phosphorus_level = 'less'
    elif int(phosphorus_content) >= 51 and int(phosphorus_content) <=100:
        phosphorus_level = 'not to less but also not to high'
    elif int(phosphorus_content) >=101:
        phosphorus_level = 'high'

    if int(potassium_content) >= 1 and int(potassium_content) <=50:                                           
        potassium_level = 'less'
    elif int(potassium_content) >= 51 and int(potassium_content) <= 100:
        potassium_level = 'not to less but also not to high'
    elif int(potassium_content) >=101:
        potassium_level = 'high'

    if float(ph_content) >=0 and float(ph_content) <=5:                                                        
        phlevel = 'acidic' 
    elif float(ph_content) >= 6 and float(ph_content) <= 8:
        phlevel = 'neutral'
    elif float(ph_content) >= 9 and float(ph_content) <= 14:
        phlevel = 'alkaline'
    
    print("The ratio of nitrogen in the soil is:",nitrogen_level)
    print("The ratio of phosphorus in the soil is:",phosphorus_level)
    print("The ratio of potassium in the soil is:",potassium_level)
    print("The temperature level around the field is:",temperature_level)
    print("The humidity level around the field is:",humidity_level)
    print("The ph type of the soil is:",phlevel)
    print("The amount of rainfall is:",rainfall_level )  
    window['-OUTPUT1-'].update('The best crop that you can grow :'+ crop_name)                                     
print("The best crop that you can grow is:",crop_name)                                                        

window.close() 